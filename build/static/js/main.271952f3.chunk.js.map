{"version":3,"sources":["services/persons.js","components/NumberDisplay.js","components/FilterInput.js","components/PersonSubmit.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","NumberDisplay","person","newFilter","deleteNumber","name","toUpperCase","includes","number","onClick","FilterInput","handleFilterChange","value","onChange","PersonSubmit","addNumber","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","preventDefault","window","confirm","target","setTimeout","changeNumber","find","n","changedPerson","returnedPerson","map","dup","num","forEach","concat","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.271952f3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const del = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n  }\r\n  \r\n  export default { getAll, create, update, del }\r\n  ","import React from 'react';\r\n\r\nconst NumberDisplay = ({ person, newFilter, deleteNumber }) => {\r\n\r\n    if (person.name.toUpperCase().includes(newFilter.toUpperCase())) {\r\n      return (\r\n        <div>\r\n          <form>\r\n          <p>\r\n            {person.name} {person.number}\r\n            <button onClick={deleteNumber} id={person.id}>{'delete'}</button>\r\n          </p>\r\n          </form>\r\n        </div>\r\n        )\r\n    }\r\n    return (\r\n      <div>\r\n        <p></p>\r\n      </div>\r\n    )\r\n    }\r\n\r\n    export default NumberDisplay","import React from 'react';\r\n\r\nconst FilterInput = ({newFilter, handleFilterChange}) => (\r\n    <div>\r\n    Filter shown with: <input \r\n    value={newFilter}\r\n    onChange={handleFilterChange}\r\n    />\r\n  </div>\r\n  )\r\n\r\nexport default FilterInput","import React from 'react';\r\n\r\nconst PersonSubmit = ({addNumber, newName, handleNameChange, newNumber, handleNumberChange}) => (\r\n    <form onSubmit={addNumber}>\r\n        <div>\r\n          name: <input \r\n          value={newName}\r\n          onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: <input \r\n          value={newNumber}\r\n          onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n\r\nexport default PersonSubmit","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport NumberDisplay from './components/NumberDisplay'\nimport FilterInput from './components/FilterInput'\nimport PersonSubmit from './components/PersonSubmit'\n\n  const Notification =  ({message})  => {\n    if (message === null) {\n      return null\n    }\n    const errorStyle = {\n      color: 'green',\n      background: `lightgrey`,\n      fontSize: 40,\n      borderStyle: `solid`,\n      borderRadius: 10,\n      padding: 10,\n      marginBottom: 10\n    }\n  \n    return (\n      <div style={errorStyle} className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    let dup = 0;\n    const num = {\n      name: newName,\n      number: newNumber\n    }\n  \n    persons.forEach(person => {if (person.name === num.name) {\n      dup = 1\n      if (window.confirm(`${newName} has already been added. Would you like to replace the number of ${newName} ?`)) {\n        changeNumber(person.id)\n        setNewName('')\n        setNewNumber('')\n        setErrorMessage(`${newName}'s number has been changed !`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n      setNewName('')\n      setNewNumber('')\n    }}\n    )\n\n    if (dup === 0){\n      personService\n      .create(num)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setErrorMessage(`${newName} has been added !`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n    \n    dup = 0\n  }\n\n  const deleteNumber = event => {\n    event.preventDefault()\n    if (window.confirm(`Are you sure you want to delete this ?`)) { \n\n    personService\n      .del(event.target.id)\n\n      personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setErrorMessage(`Selected number deleted !`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const changeNumber = id => {\n    const person = persons.find(n => n.id === id)\n    const changedPerson = { ...person, number: newNumber }\n\n    personService\n      .update(id, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n        <div>\n          <FilterInput newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n        </div>\n      <h2>add a new</h2>\n      <PersonSubmit addNumber={addNumber} newName={newName} \n      handleNameChange={handleNameChange} newNumber={newNumber} \n      handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n          {persons.map((person, i) => \n          <NumberDisplay key={i} person={person} newFilter={newFilter} deleteNumber={deleteNumber}/>\n          )}\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}